@inherits LayoutComponentBase
@using FitnessPortal.Authentication
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthStateProvider

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar Elevation="0" Dense="true">
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => _drawerOpen = !_drawerOpen)"/>
		<MudText Typo="Typo.h5">Fitness Portal</MudText>
		<MudSpacer />
		<AuthorizeView>
			<Authorized>
				<MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopRight">
					<ActivatorContent>
						<MudAvatar Color="Color.Success">@context.User.Identity.Name.Substring(0, 1).ToUpper()</MudAvatar>
					</ActivatorContent>
					<ChildContent>
						<MudMenuItem OnClick="@(() => navigationManager.NavigateTo("/register"))">Profile</MudMenuItem>
						<MudMenuItem OnClick="() => Logout()">Sign Out</MudMenuItem>
					</ChildContent>
				</MudMenu>
			</Authorized>
		</AuthorizeView>
		<MudToggleIconButton @bind-Toggled="@_isDarkMode" Color="Color.Inherit" Icon="@Icons.Material.TwoTone.DarkMode" ToggledIcon="@Icons.Material.Filled.LightMode" />
	</MudAppBar>
		<MudDrawer @bind-Open="_drawerOpen" Elevation="1" Color="Color.Inherit" ClipMode="DrawerClipMode.Docked" Variant="DrawerVariant.Mini">
		</MudDrawer>

	<MudMainContent>
		<MudContainer MaxWidth="MaxWidth.Large">
			@Body
		</MudContainer>
	</MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
	An unhandled error has occurred.
	<a href="" class="reload">Reload</a>
	<a class="dismiss">🗙</a>
</div>



@code {
	[CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
	protected async override Task OnInitializedAsync()
	{
		base.OnInitialized();
		var user = (await AuthStat).User;
		if (!user.Identity.IsAuthenticated)
		{
			navigationManager.NavigateTo("/login");
		}
	}

	bool _isDarkMode = false;
	bool _drawerOpen = false;
	public MudTheme _theme = new MudTheme
		{
			Palette = new PaletteLight
			{
				AppbarBackground = Colors.Indigo.Default,
			}
		};

	private async void Logout()
	{
		var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
		await customAuthStateProvider.AuthenticateUser(null);
		navigationManager.NavigateTo("/login");
	}
}